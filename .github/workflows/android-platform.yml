name: Build Android Debug APK (Manual)

# Allows you to run this workflow manually from the Actions tab
on:
  workflow_dispatch:

jobs:
  build_android_debug:
    name: Build Flutter Android Debug APK
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository's code

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Adoptium Temurin is a good open-source JDK
          java-version: '11'     # Flutter generally works well with JDK 11 or 17.
                                 # PicaComic's existing workflow uses 11, so let's stick with that for compatibility.

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # Popular action to set up Flutter
        with:
          channel: 'stable'     # Use the stable channel of Flutter
          flutter-version: '3.24.0' # Optional: Pin to a specific Flutter version if needed
          cache: true             # Enable caching for Flutter SDK and dependencies

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: (Optional) Display Flutter version and project info
        run: |
          flutter --version
          flutter doctor -v

      # The PicaComic project seems to generate native symbols.
      # If you want to build exactly like their CI and get symbols:
      # - name: Build APK with debug symbols (matches PicaComic CI)
      #   run: flutter build apk --debug --split-debug-info=build/app/outputs/symbols

      # Standard debug build without explicit symbol splitting:
      - name: Build Android Debug APK
        run: flutter build apk --debug

      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk # Name of the artifact that will be downloadable
          path: build/app/outputs/flutter-apk/app-debug.apk # Path to the generated APK
          if-no-files-found: error # Fail the workflow if the APK is not found
          retention-days: 7 # How long to keep the artifact (optional, default is 90)

      # If you used the --split-debug-info option above, you'd also upload symbols:
      # - name: Upload Debug Symbols Artifact
      #   if: success() # Only run if the build was successful
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: debug-symbols
      #     path: build/app/outputs/symbols/
      #     if-no-files-found: error
      #     retention-days: 7
