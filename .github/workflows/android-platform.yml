
name: Build PicaComic Android Package

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_android:
    name: Build Android APK
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Check out the repository code, including submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # Important for projects with submodules like PicaComic

      # Step 2: Set up Java Development Kit (JDK)
      # Flutter Android builds require Java. JDK 17 is a common choice.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Set up Flutter SDK
      # This action downloads and installs the Flutter SDK.
      # Using 'stable' channel will get the latest stable Flutter version.
      # You can specify a version like '3.19.0' if needed:
      # flutter-version: '3.19.0'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Or 'beta', 'dev', 'master', or a specific version

      # Step 4: Get Flutter dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # Step 5: Build Flutter APK (debug mode)
      # This command builds a debug APK.
      # The output APK will be located at build/app/outputs/flutter-apk/app-debug.apk
      - name: Build Debug APK
        run: flutter build apk --debug
        # To provide build number and version (less common for debug builds but possible):
        # run: flutter build apk --debug --build-name=${{ github.run_number }} --build-number=${{ github.run_number }}

      # Step 6: Rename the Debug APK (optional, for better artifact identification)
      # This makes the downloaded artifact name more descriptive.
      - name: Rename Debug APK
        run: mv build/app/outputs/flutter-apk/app-debug.apk PicaComic-debug.apk

      # Step 7: Upload Debug APK artifact
      # This step uploads the built debug APK as an artifact, which you can download from the workflow run page.
      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PicaComic-debug-apk # Name of the artifact bundle in GitHub
          path: PicaComic-debug.apk # Path to the file to upload
          if-no-files-found: error # Fail the workflow if the APK is not found
